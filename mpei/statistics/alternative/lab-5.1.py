import numpy as np
from scipy import stats
from matplotlib import pyplot as plt

# Проверка гипотезы о нормальном распределении.
# данные
data = np.array([
    13.39,	13.33,	13.56,	13.38,	13.43,	13.37,	13.53,	13.40,	13.25,	13.37,
    13.28,	13.34,	13.50,	13.38,	13.38,	13.45,	13.47,	13.62,	13.45,	13.39,
    13.53,	13.58,	13.32,	13.27,	13.42,	13.40,	13.57,	13.46,	13.33,	13.40,
    13.57,	13.36,	13.43,	13.38,	13.26,	13.52,	13.35,	13.29,	13.48,	13.43,
    13.40,	13.39,	13.50,	13.52,	13.39,	13.39,	13.46,	13.29,	13.55,	13.31,
    13.29,	13.33,	13.38,	13.61,	13.55,	13.40,	13.20,	13.31,	13.46,	13.13,
    13.43,	13.51,	13.50,	13.38,	13.44,	13.62,	13.42,	13.54,	13.31,	13.58,
    13.41,	13.49,	13.42,	13.45,	13.34,	13.47,	13.48,	13.59,	13.20,	14.56,
    13.55,	13.44,	13.50,	13.40,	13.48,	13.29,	13.31,	13.42,	13.32,	13.48,
    13.43,	13.26,	13.58,	13.38,	13.48,	13.45,	13.29,	13.32,	13.24,	13.38,
    13.34,	13.14,	13.31,	13.51,	13.59,	13.32,	13.52,	13.57,	13.62,	13.29,
    13.23,	13.37,	13.64,	13.30,	13.40,	13.58,	13.24,	13.32,	13.52,	13.50,
    13.43,	13.58,	13.63,	13.48,	13.34,	13.37,	13.18,	13.50,	13.45,	13.60,
    13.38,	13.33,	13.57,	13.28,	13.32,	13.40,	13.40,	13.33,	13.20,	13.44,
    13.34,	13.54,	13.40,	13.47,	13.28,	13.41,	13.39,	13.48,	13.42,	13.46,
    13.28,	13.46,	13.37,	13.53,	13.43,	13.30,	13.45,	13.40,	13.45,	13.40,
    13.33,	13.39,	13.56,	13.46,	13.26,	13.35,	13.42,	13.36,	13.44,	13.41,
    13.43,	13.51,	13.51,	13.24,	13.34,	13.28,	13.37,	13.54,	13.43,	13.35,
    13.52,	13.23,	13.48,	13.48,	13.54,	13.41,	13.51,	13.44,	13.36,	13.36,
    13.53,	13.44,	13.69,	13.66,	13.32,	13.26,	13.51,	13.38,	13.46,	13.34
])
# вычисляем оценки параметров
mean = data.mean()
std = data.std()
# границы
edges = stats.norm.ppf(np.linspace(0.1, 0.9, 9), loc=mean, scale=std)
edges = [data.min(), *edges, data.max()]
# наблюдаемые количества
observed, _ = np.histogram(data, edges)
# ожидаемые количества
cumulative = np.array([0, *stats.norm.cdf(edges[1:-1], loc=mean, scale=std), 1])
probabilities = cumulative[1:] - cumulative[:-1]
expected = data.shape[0] * probabilities
# статистика
X2 = np.sum((observed - expected)**2 / expected)
print(f'X2 = {X2:.5f}')
# уровень значимости
a = 1 - stats.chi2.cdf(X2, df = observed.shape[0] - 1 - 2)
print(f'alpha = {a:.5f}')
# приближение
fit = stats.fit(stats.norm, data, [(12, 14), (0.1, 0.7)])
fit.plot()
plt.grid()
plt.show()