% точность определения порогов
thresholds_tolerance = 10^(-3);

% подбираем наибольшее количество сигналов
if q >= 4
    maximum_signals_count = 10;
else
    maximum_signals_count = 50;
end

fprintf("Searching for 2-stage detector...\n");

[ two_stage_solution, candidates ] = ...
    solve_for_two ( ...
        q, ...
        required_true_detection_probability, ...
        required_false_detection_probability, ...
        maximum_signals_count, ...
        target_probability, ...
        thresholds_tolerance ...
    );
disp ( two_stage_solution );

fprintf("Drawing curves of 2-stage detector...\n")

if ( ~isempty ( two_stage_solution . first_count ) && ~isempty ( two_stage_solution . second_count ) )
    % формируем изображение
    Contours.draw ( ...
            Detector ( q, two_stage_solution . first_count ), ...
            Detector ( q, two_stage_solution . second_count ), ...
            required_true_detection_probability, ...
            required_false_detection_probability, ...
            two_stage_solution . thresholds ...
        );
end

fprintf("Searching for 1-stage detector... \n");

one_stage_solution = solve_for_one ( ...
        q, ...
        required_true_detection_probability, ...
        required_false_detection_probability, ...
        maximum_signals_count ...
    );
disp ( one_stage_solution );

% последовательный критерий
sequential = Sequential ( q, required_true_detection_probability, required_false_detection_probability );